<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jd.shop.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.jd.shop.model.Order" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uuid" property="uuid" jdbcType="VARCHAR" />
    <result column="ordertime" property="ordertime" jdbcType="TIMESTAMP" />
    <result column="shopstatus" property="shopstatus" jdbcType="INTEGER" />
    <result column="paystatus" property="paystatus" jdbcType="INTEGER" />
    <result column="paytime" property="paytime" jdbcType="TIMESTAMP" />
    <result column="limit" property="limit" jdbcType="INTEGER" />
    <result column="allprice" property="allprice" jdbcType="DOUBLE" />
    <result column="detail" property="detail" jdbcType="VARCHAR" />
    <result column="order_user" property="orderUser" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, uuid, ordertime, shopstatus, paystatus, paytime, `limit`, allprice, detail, order_user
  </sql>
  <sql id="Simple1">
    id, uuid, ordertime, shopstatus, paystatus, `limit`, allprice
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from t_order
    where id = #{id,jdbcType=INTEGER}
  </select>

  <!-- new -->
  <select id="selectByUUID" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_order
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <!-- 用户 -->
  <!-- 待付款 -->
  <select id="getUserOrders" parameterType="java.lang.Integer" resultType="com.jd.shop.model.Order">
    SELECT
    id,uuid,ordertime,shopstatus,paystatus ,`limit`,allprice
    FROM
    t_order
    WHERE
    order_user=#{uid,jdbcType=INTEGER} and paystatus=0 and shopstatus=0
    ORDER BY ordertime
  </select>
  <!-- 待发货 -->
  <select id="getUserOrders2" parameterType="java.lang.Integer" resultType="com.jd.shop.model.Order">
    SELECT
    id,uuid,ordertime,shopstatus,paystatus ,allprice
    FROM
    t_order
    WHERE
    order_user=#{uid,jdbcType=INTEGER} and paystatus=1 and shopstatus=0
    ORDER BY ordertime
  </select>
  <!-- 待收货 -->
  <select id="getUserOrders3" parameterType="java.lang.Integer" resultType="com.jd.shop.model.Order">
    SELECT
    id,uuid,ordertime,shopstatus,paystatus ,allprice
    FROM
    t_order
    WHERE
    order_user=#{uid,jdbcType=INTEGER} and paystatus=1 and shopstatus=1
    ORDER BY ordertime
  </select>
  <!-- 待评价 -->
  <select id="getUserOrders4" parameterType="java.lang.Integer" resultType="com.jd.shop.model.Order">
    SELECT
    id,uuid,ordertime,shopstatus,paystatus ,allprice
    FROM
    t_order
    WHERE
    order_user=#{uid,jdbcType=INTEGER} and paystatus=1 and shopstatus=2
    ORDER BY ordertime
  </select>
  <!-- 已完成 -->
  <select id="getUserOrders5" parameterType="java.lang.Integer" resultType="com.jd.shop.model.Order">
    SELECT
    id,uuid,ordertime,shopstatus,paystatus ,allprice
    FROM
    t_order
    WHERE
    order_user=#{uid,jdbcType=INTEGER} and paystatus=1 and shopstatus=3
    ORDER BY ordertime
  </select>

  <!-- 收货之后 -->
  <select id="getUserOrders45" parameterType="java.lang.Integer" resultType="com.jd.shop.model.Order">
    SELECT
    id,uuid,ordertime,shopstatus,paystatus ,allprice
    FROM
    t_order
    WHERE
    order_user=#{uid,jdbcType=INTEGER} and paystatus=1 and shopstatus>=2
    ORDER BY ordertime
  </select>

  <!-- 超时/取消 -->
  <select id="OrderCancel" parameterType="java.lang.Integer" resultType="com.jd.shop.model.Order">
    SELECT
    id,uuid,ordertime,shopstatus,paystatus ,`limit` ,allprice
    FROM
    t_order
    WHERE
    order_user=#{uid,jdbcType=INTEGER} and paystatus=2 and shopstatus=0
    ORDER BY ordertime
  </select>

  <select id="getDetail" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT
    detail
    from
    t_order
    where
    uuid=#{uuid,jdbcType=VARCHAR}
  </select>

  <!-- 管理员 -->
  <!-- 所有未付款订单 -->
  <select id="getAllOrders" resultType="com.jd.shop.model.Order">
    SELECT
     id,uuid,ordertime,shopstatus,paystatus ,`limit`,allprice
    FROM
     t_order
    WHERE
     paystatus=0 and shopstatus=0
    ORDER BY ordertime
  </select>
  <!-- 未付款订单帅选 -->
  <select id="getPartOrders" resultType="com.jd.shop.model.Order" parameterType="java.lang.String">
    SELECT
    id,uuid,ordertime,shopstatus,paystatus ,allprice
    FROM
    t_order
    WHERE
    paystatus=0 and shopstatus=0 and
    ordertime BETWEEN #{begin,jdbcType=VARCHAR} AND #{end,jdbcType=VARCHAR}
    AND uuid LIKE concat(concat('%',#{uuid,jdbcType=VARCHAR}),'%')
    ORDER BY ordertime
  </select>

  <!-- 待发货 -->
  <select id="getAllOrders2" resultType="com.jd.shop.model.Order">
    SELECT
     id,uuid,ordertime,shopstatus,paystatus ,allprice
    FROM
     t_order
    WHERE
     paystatus=1 and shopstatus=0
    ORDER BY ordertime
  </select>
  <!-- 待发货订单帅选 -->
  <select id="getPartOrders2" resultType="com.jd.shop.model.Order" parameterType="java.lang.String">
    SELECT
    id,uuid,ordertime,shopstatus,paystatus ,allprice
    FROM
    t_order
    WHERE
    paystatus=1 and shopstatus=0 and
    ordertime BETWEEN #{begin,jdbcType=VARCHAR} AND #{end,jdbcType=VARCHAR}
    AND uuid LIKE concat(concat('%',#{uuid,jdbcType=VARCHAR}),'%')
    ORDER BY ordertime
  </select>

  <!-- 待收货 -->
  <select id="getAllOrders3" resultType="com.jd.shop.model.Order">
    SELECT
    id,uuid,ordertime,shopstatus,paystatus ,allprice
    FROM
    t_order
    WHERE
    paystatus=1 and shopstatus=1
    ORDER BY ordertime
  </select>
  <!-- 待评价 -->
  <select id="getAllOrders4" resultType="com.jd.shop.model.Order">
    SELECT
    id,uuid,ordertime,shopstatus,paystatus ,allprice
    FROM
    t_order
    WHERE
    paystatus=1 and shopstatus=2
    ORDER BY ordertime
  </select>

  <!-- 已完成 -->
  <select id="getAllOrders5" resultType="com.jd.shop.model.Order">
    SELECT
    id,uuid,ordertime,shopstatus,paystatus ,allprice
    FROM
    t_order
    WHERE
    paystatus=1 and shopstatus=3
    ORDER BY ordertime
  </select>

  <!-- 已超时 -->
  <select id="getAllOrdersCancel" parameterType="java.lang.Integer" resultType="com.jd.shop.model.Order">
    SELECT
    id,uuid,ordertime,shopstatus,paystatus ,`limit` ,allprice
    FROM
    t_order
    WHERE
    paystatus=2 and shopstatus=0
    ORDER BY ordertime
  </select>

  <!-- 统计上月 -->
  <select id="getLastCount" resultType="map">
    SELECT
      COALESCE(SUM(allprice),0) as `all` ,
      COUNT( if(paystatus=0 or paystatus=2,true,null ) ) as nopay ,
      COUNT( if(paystatus=1,true,null ) ) as pay ,
      COUNT( if(shopstatus=3,true,null ) ) as `finish`
    FROM
      t_order
    WHERE
      date_format(ordertime,'%Y-%m')=date_format(DATE_SUB(curdate(), INTERVAL 1 MONTH),'%Y-%m')
  </select>

  <!-- 统计本月 -->
  <select id="getThisCount" resultType="map">
    SELECT
      COALESCE(SUM(allprice),0) as `all` ,
      COUNT( if(paystatus=0 or paystatus=2,true,null ) ) as nopay ,
      COUNT( if(paystatus=1,true,null ) ) as pay ,
      COUNT( if(shopstatus=3,true,null ) ) as `finish`
    FROM
      t_order
    WHERE
      date_format(ordertime,'%Y-%m')=date_format(now(),'%Y-%m')
  </select>

  <!-- 历史统计 -->
  <select id="getHistoryCount" resultType="map">
    SELECT
    COALESCE(SUM(allprice),0) as `all` ,
    COUNT( if(paystatus=0 or paystatus=2,true,null ) ) as nopay ,
    COUNT( if(paystatus=1,true,null ) ) as pay ,
    COUNT( if(shopstatus=3,true,null ) ) as `finish`
    FROM
    t_order
  </select>

  <!-- 查询订单失效(含用户) -->
  <select id="checkOrderWithUser" resultType="com.jd.shop.model.Order" parameterType="java.lang.Integer">
    SELECT
      uuid,ordertime,date_add(ordertime, interval `limit` HOUR) as `limit`,NOW() as `now`,
      DATEDIFF(date_add(ordertime, interval `limit` HOUR) , now()) as diff
    FROM
      t_order
    WHERE
      DATEDIFF(  now() , date_add(ordertime, interval `limit` HOUR) ) >0 and order_user= #{ uid,jdbcType=INTEGER } and paystatus=0
  </select>

  <!-- 检查所有失效订单(系统检查) -->
  <select id="checkOrders" resultType="com.jd.shop.model.Order" parameterType="java.lang.Integer">
    SELECT
    uuid,ordertime,date_add(ordertime, interval `limit` HOUR) as `limit`,NOW() as `now`,
    DATEDIFF(date_add(ordertime, interval `limit` HOUR) , now()) as diff
    FROM
    t_order
    WHERE
    DATEDIFF(  now() , date_add(ordertime, interval `limit` HOUR) ) >0 and paystatus=0
  </select>

  <!-- 高级订单查询,日期,订单号,状态 -->
  <select id="QueryOrder" parameterType="java.lang.String" resultType="com.jd.shop.model.Order">
    SELECT
    uuid , ordertime , paystatus , shopstatus , allprice
    FROM
    t_order
    WHERE
    uuid LIKE concat(concat('%',#{uuid,jdbcType=VARCHAR}),'%')
    <choose>
      <when test="begin != null and begin != '' ">
        and ordertime &gt;= #{begin,jdbcType=VARCHAR}
      </when>
      <when test="end != null and end != '' ">
        and ordertime &lt;= #{end,jdbcType=VARCHAR}
      </when>
    </choose>
    and paystatus = #{pay,jdbcType=INTEGER}
    and shopstatus = #{shop,jdbcType=INTEGER}
  </select>

  <!-- 付款验证 -->
  <select id="pay_check" resultType="java.lang.String">
    SELECT
     paystatus
    FROM
     t_order
    WHERE
     uuid = #{uuid,jdbcType=VARCHAR} AND order_user = #{uid,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_order
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <!-- new -->
  <delete id="delOrderByUUID" parameterType="java.lang.String" >
    delete from t_order
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.jd.shop.model.Order" >
    insert into t_order (id, uuid, ordertime,
    shopstatus, paystatus, paytime,
    limit, allprice, detail,
    order_user)
    values (#{id,jdbcType=INTEGER}, #{uuid,jdbcType=VARCHAR}, #{ordertime,jdbcType=TIMESTAMP},
    #{shopstatus,jdbcType=INTEGER}, #{paystatus,jdbcType=INTEGER}, #{paytime,jdbcType=TIMESTAMP},
    #{limit,jdbcType=INTEGER}, #{allprice,jdbcType=DOUBLE}, #{detail,jdbcType=VARCHAR},
    #{orderUser,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jd.shop.model.Order" useGeneratedKeys="true" keyProperty="id">
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uuid != null" >
        uuid,
      </if>
      <if test="ordertime != null" >
        ordertime,
      </if>
      <if test="shopstatus != null" >
        shopstatus,
      </if>
      <if test="paystatus != null" >
        paystatus,
      </if>
      <if test="paytime != null" >
        paytime,
      </if>
      <if test="limit != null" >
        `limit`,
      </if>
      <if test="allprice != null" >
        allprice,
      </if>
      <if test="detail != null" >
        detail,
      </if>
      <if test="orderUser != null" >
        order_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uuid != null" >
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="ordertime != null" >
        #{ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="shopstatus != null" >
        #{shopstatus,jdbcType=INTEGER},
      </if>
      <if test="paystatus != null" >
        #{paystatus,jdbcType=INTEGER},
      </if>
      <if test="paytime != null" >
        #{paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="limit != null" >
        #{limit,jdbcType=INTEGER},
      </if>
      <if test="allprice != null" >
        #{allprice,jdbcType=DOUBLE},
      </if>
      <if test="detail != null" >
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="orderUser != null" >
        #{orderUser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jd.shop.model.Order" >
    update t_order
    <set >
      <if test="uuid != null" >
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="ordertime != null" >
        ordertime = #{ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="shopstatus != null" >
        shopstatus = #{shopstatus,jdbcType=INTEGER},
      </if>
      <if test="paystatus != null" >
        paystatus = #{paystatus,jdbcType=INTEGER},
      </if>
      <if test="paytime != null" >
        paytime = #{paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="limit != null" >
        limit = #{limit,jdbcType=INTEGER},
      </if>
      <if test="allprice != null" >
        allprice = #{allprice,jdbcType=DOUBLE},
      </if>
      <if test="detail != null" >
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="orderUser != null" >
        order_user = #{orderUser,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jd.shop.model.Order" >
    update t_order
    set uuid = #{uuid,jdbcType=VARCHAR},
      ordertime = #{ordertime,jdbcType=TIMESTAMP},
      shopstatus = #{shopstatus,jdbcType=INTEGER},
      paystatus = #{paystatus,jdbcType=INTEGER},
      paytime = #{paytime,jdbcType=TIMESTAMP},
      limit = #{limit,jdbcType=INTEGER},
      allprice = #{allprice,jdbcType=DOUBLE},
      detail = #{detail,jdbcType=VARCHAR},
      order_user = #{orderUser,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- new -->
  <update id="UpdateShopS" parameterType="java.lang.Object">
    UPDATE
    t_order
    set shopstatus=#{status,jdbcType=INTEGER}
    where uuid=#{uuid,jdbcType=VARCHAR}
  </update>

  <update id="UpdatePayS" parameterType="java.lang.Object">
    UPDATE
    t_order
    set paystatus=#{status,jdbcType=INTEGER}
    where uuid=#{uuid,jdbcType=VARCHAR}
  </update>

  <update id="updateDetailByUUID" parameterType="java.lang.String">
    UPDATE
    t_order
    set detail=#{detail,jdbcType=VARCHAR}
    where uuid=#{uuid,jdbcType=VARCHAR}
  </update>

  <!-- 新需求 -->
  <!-- 查询用户所有订单，有限个 -->
  <select id="getOrderByIdLimit" parameterType="java.lang.Integer" resultType="com.jd.shop.model.Order">
    select
    <include refid="Base_Column_List" />
    from t_order
    where order_user = #{uid,jdbcType=INTEGER}
    ORDER BY ordertime DESC
    LIMIT #{count,jdbcType=INTEGER}
  </select>

  <select id="getNoSend" parameterType="java.lang.Integer" resultType="com.jd.shop.model.Order">
    SELECT
    id,uuid,detail,order_user
    FROM
    t_order
    WHERE
    paystatus=0 OR paystatus=2 OR ( paystatus=1 AND 1>=shopstatus )
    AND order_user=1
  </select>

  <select id="getAllByUser" parameterType="java.lang.Integer" resultType="com.jd.shop.model.Order">
    SELECT
    id,uuid,ordertime,shopstatus,paystatus ,allprice
    FROM
    t_order
    WHERE
    order_user=#{uid,jdbcType=INTEGER}
    ORDER BY ordertime
  </select>

</mapper>