<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jd.shop.dao.PublicMapper" >
  <resultMap id="BaseResultMap" type="com.jd.shop.model.Public" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="publictime" property="publictime" jdbcType="TIMESTAMP" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="context" property="context" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="public_piclist" property="publicPiclist" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, publictime, title, context, type, public_piclist
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_public
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_public
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jd.shop.model.Public" >
    insert into t_public (id, publictime, title, 
      context, type, public_piclist
      )
    values (#{id,jdbcType=INTEGER}, #{publictime,jdbcType=TIMESTAMP}, #{title,jdbcType=VARCHAR}, 
      #{context,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{publicPiclist,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jd.shop.model.Public" >
    insert into t_public
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="publictime != null" >
        publictime,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="context != null" >
        context,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="publicPiclist != null" >
        public_piclist,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="publictime != null" >
        #{publictime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="context != null" >
        #{context,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="publicPiclist != null" >
        #{publicPiclist,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jd.shop.model.Public" >
    update t_public
    <set >
      <if test="publictime != null" >
        publictime = #{publictime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="context != null" >
        context = #{context,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="publicPiclist != null" >
        public_piclist = #{publicPiclist,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jd.shop.model.Public" >
    update t_public
    set publictime = #{publictime,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR},
      context = #{context,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      public_piclist = #{publicPiclist,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>